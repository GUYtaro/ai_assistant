# main.py
# -------------------------
# ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á AI Assistant
# - ‡∏ú‡∏ô‡∏ß‡∏Å STT (‡∏´‡∏π), LLM (‡∏™‡∏°‡∏≠‡∏á), ‡πÅ‡∏•‡∏∞ TTS (‡∏õ‡∏≤‡∏Å) ‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô
# - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏ö‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á (Offline)
# -------------------------\

from core.llm_client import LLMClient
from core.stt_client import STTClient
from core.tts_client import TTSClient # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ TTSClient ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Offline pyttsx3

def main():
    # 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Clients ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏™‡πà‡∏ß‡∏ô
    llm = LLMClient()
    # ‡πÉ‡∏ä‡πâ "medium" model ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö STT ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    stt = STTClient(model_size="medium", language="th") 
    tts = TTSClient(lang="th") # ‡πÉ‡∏ä‡πâ Offline TTS (pyttsx3)
    
    # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ LLM ‡∏à‡∏≥‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡πÑ‡∏î‡πâ)
    # ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÅ‡∏£‡∏Å‡∏Ñ‡∏∑‡∏≠ System Prompt ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å Assistant
    chat_history = [{"role": "system", "content": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£ ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏¢"}] 

    print("=========================================================")
    print("=== ü§ñ AI Assistant (Offline Mode: LM Studio, Whisper, pyttsx3) ===")
    print("=========================================================")
    print("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î Enter")
    print("‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á: ‡∏Å‡∏î Enter ‡∏ß‡πà‡∏≤‡∏á ‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏π‡∏î (‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)")
    print("‡∏û‡∏¥‡∏°‡∏û‡πå exit/quit/q ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å\n")

    while True:
        try:
            # 2. ‡∏£‡∏±‡∏ö Input ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏π‡∏î)
            user_input = input("‡∏Ñ‡∏∏‡∏ì (‡∏û‡∏¥‡∏°‡∏û‡πå/Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏π‡∏î): ")

            # ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
            if user_input.lower() in ["exit", "quit", "q"]:
                tts.speak("‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ô‡∏∞‡∏Ñ‡∏∞")
                break

            # ‡∏ñ‡πâ‡∏≤ user ‡∏Å‡∏î Enter ‡∏ß‡πà‡∏≤‡∏á ‡πÜ ‚Üí ‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏ó‡∏ô
            if user_input.strip() == "":
                print("üé§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ... ‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö")
                user_input = stt.listen_once(duration=5)
                # ‡∏ñ‡πâ‡∏≤‡∏≠‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÉ‡∏´‡πâ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà
                if not user_input or user_input.strip() == "":
                    print("[Assistant] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
                    continue
                print(f"üìù ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤: {user_input}")

            # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ user_input (‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î)
            if user_input.strip():
                # 3. ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏õ‡πÉ‡∏´‡πâ LLM ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• (‡πÉ‡∏ä‡πâ llm.ask ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ AttributeError)
                reply_text = llm.ask(user_input, history=chat_history)
                
                # 4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï History ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ
                chat_history.append({"role": "user", "content": user_input})
                chat_history.append({"role": "assistant", "content": reply_text})
                
                # 5. ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏û‡∏π‡∏î‡∏≠‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á
                print(f"ü§ñ ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢: {reply_text}")
                tts.speak(reply_text)

        except KeyboardInterrupt:
            print("\n[‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ]")
            break
        except Exception as e:
            # ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (‡πÄ‡∏ä‡πà‡∏ô LM Studio ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà)
            print(f"\n[CRITICAL ERROR] ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á: {e}")
            print("--- üí° ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ LM Studio Server ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô http://localhost:1234/ ---")
            break

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
if __name__ == "__main__":
    main()
