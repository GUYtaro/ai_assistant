# gui/vision_panel.py
from PyQt6.QtWidgets import QWidget, QVBoxLayout, QPushButton, QLabel, QTextEdit, QComboBox
from PyQt6.QtCore import Qt
from core.vision_system import VisionSystem

class VisionPanel(QWidget):
    def __init__(self, vision_system: VisionSystem):
        super().__init__()
        self.setWindowTitle("üß† Copilot Vision")
        self.setWindowFlags(Qt.WindowType.FramelessWindowHint | Qt.WindowType.Tool)
        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground)
        self.resize(400, 250)

        layout = QVBoxLayout(self)
        layout.setContentsMargins(12, 12, 12, 12)

        self.label = QLabel("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå‡πÉ‡∏´‡πâ AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:")
        layout.addWidget(self.label)

        self.monitor_select = QComboBox()
        self.monitor_select.addItems(["Monitor 1", "Monitor 2"])
        layout.addWidget(self.monitor_select)

        self.capture_btn = QPushButton("üì∏ ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå")
        layout.addWidget(self.capture_btn)

        self.ask_box = QTextEdit()
        self.ask_box.setPlaceholderText("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡πÄ‡∏ä‡πà‡∏ô '‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢'")
        layout.addWidget(self.ask_box)

        self.ask_btn = QPushButton("üß† ‡∏ñ‡∏≤‡∏° AI")
        layout.addWidget(self.ask_btn)

        self.result_label = QLabel("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...")
        layout.addWidget(self.result_label)

        # Vision System (‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö AI)
        self.vision = vision_system

        self.capture_btn.clicked.connect(self._on_capture)
        self.ask_btn.clicked.connect(self._on_ask)

    def _on_capture(self):
        reply = self.vision.analyze("‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠", monitor=0)
        self.result_label.setText(reply)

    def _on_ask(self):
        user_prompt = self.ask_box.toPlainText().strip()
        if not user_prompt:
            self.result_label.setText("‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô")
            return
        reply = self.vision.ask_with_screenshot(user_prompt, monitor=0)
        self.result_label.setText(reply)
