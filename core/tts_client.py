# core/tts_client.py
# -------------------------
# ‡∏£‡∏∞‡∏ö‡∏ö Text-to-Speech (TTS)
# ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
# ‡∏ñ‡πâ‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á Windows ‡πÑ‡∏°‡πà‡∏°‡∏µ ‚Üí ‡πÉ‡∏ä‡πâ gTTS ‡∏Ç‡∏≠‡∏á Google ‡πÅ‡∏ó‡∏ô
# -------------------------

import pyttsx3
from gtts import gTTS
import tempfile
import os
import platform
from playsound import playsound


class TTSClient:
    def __init__(self, lang="th"):
        self.lang = lang
        self.engine = pyttsx3.init()
        self.voice_available = False
        self.fallback_enabled = False

        # ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÑ‡∏´‡∏°
        voices = self.engine.getProperty("voices")
        for voice in voices:
            if "th" in voice.languages or "Thai" in voice.name:
                self.engine.setProperty("voice", voice.id)
                self.voice_available = True
                break

        if not self.voice_available:
            print("[TTS WARNING] ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Windows")
            print("üëâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏à‡∏≤‡∏Å Google TTS ‡πÅ‡∏ó‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï)")
            self.fallback_enabled = True
        else:
            print("[TTS] ‚úÖ ‡∏û‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
        self.engine.setProperty("rate", 180)
        self.engine.setProperty("volume", 1.0)

    def speak(self, text: str):
        """‡∏û‡∏π‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏ó‡∏¢"""
        if not text or text.strip() == "":
            return

        try:
            if self.fallback_enabled:
                # --- ‡πÉ‡∏ä‡πâ Google TTS ---
                self._speak_google(text)
            else:
                # --- ‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö Windows ---
                self.engine.say(text)
                self.engine.runAndWait()

        except Exception as e:
            print(f"[TTS ERROR] ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")
            print("üëâ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏ä‡πâ Google TTS (‡∏™‡∏≥‡∏£‡∏≠‡∏á)")
            self._speak_google(text)

    def _speak_google(self, text):
        """‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏à‡∏≤‡∏Å Google"""
        try:
            with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as tmp_file:
                tts = gTTS(text=text, lang="th")
                tts.save(tmp_file.name)
                tmp_path = tmp_file.name

            playsound(tmp_path)
            os.remove(tmp_path)
        except Exception as e:
            print(f"[TTS ERROR] Google TTS ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: {e}")
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")

