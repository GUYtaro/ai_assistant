# core/tts_client.py
# -------------------------
# р╕гр╕░р╕Ър╕Ъ Text-to-Speech (TTS)
# р╕гр╕нр╕Зр╕гр╕▒р╕Ър╕ар╕▓р╕йр╕▓р╣Др╕Чр╕в
# тЬЕ р╣Бр╕Бр╣Йр╣Др╕Вр╕Ыр╕▒р╕Нр╕лр╕▓р╕Юр╕╣р╕Фр╕Лр╣Йр╕│ - р╕Хр╕▒р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕Щр╕зр╕Зр╣Ар╕ер╣Зр╕Ър╕нр╕нр╕Б
# -------------------------

import pyttsx3
from gtts import gTTS
import tempfile
import os
import re
from playsound import playsound


class TTSClient:
    def __init__(self, lang="th"):
        self.lang = lang
        self.engine = pyttsx3.init()
        self.voice_available = False
        self.fallback_enabled = False

        # р╕ер╕нр╕Зр╕лр╕▓р╕зр╣Ир╕▓р╣Гр╕Щр╕гр╕░р╕Ър╕Ър╕бр╕╡р╣Ар╕кр╕╡р╕вр╕Зр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╣Др╕лр╕б
        voices = self.engine.getProperty("voices")
        for voice in voices:
            if "th" in voice.languages or "Thai" in voice.name:
                self.engine.setProperty("voice", voice.id)
                self.voice_available = True
                break

        if not self.voice_available:
            print("[TTS WARNING] тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╣Ар╕кр╕╡р╕вр╕Зр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╣Гр╕Щр╕гр╕░р╕Ър╕Ъ Windows")
            print("ЁЯСЙ р╕гр╕░р╕Ър╕Ър╕Ир╕░р╣Гр╕Кр╣Йр╣Ар╕кр╕╡р╕вр╕Зр╕кр╕│р╕гр╕нр╕Зр╕Ир╕▓р╕Б Google TTS р╣Бр╕Чр╕Щ (р╕Хр╣Йр╕нр╕Зр╕Хр╣Ир╕нр╕нр╕┤р╕Щр╣Ар╕Чр╕нр╕гр╣Мр╣Ар╕Щр╣Зр╕Х)")
            self.fallback_enabled = True
        else:
            print("[TTS] тЬЕ р╕Юр╕Ър╣Ар╕кр╕╡р╕вр╕Зр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╣Гр╕Щр╕гр╕░р╕Ър╕Ъ р╕Юр╕гр╣Йр╕нр╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ")

        # р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╣Ар╕кр╕╡р╕вр╕Зр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╣Ар╕гр╣Зр╕з
        self.engine.setProperty("rate", 180)
        self.engine.setProperty("volume", 1.0)

    def speak(self, text: str):
        """
        р╕Юр╕╣р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Фр╣Йр╕зр╕вр╣Ар╕кр╕╡р╕вр╕Зр╣Др╕Чр╕в
        тЬЕ р╕Хр╕▒р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕Щр╕зр╕Зр╣Ар╕ер╣Зр╕Ър╣Бр╕ер╕░ emoji р╕нр╕нр╕Бр╕Бр╣Ир╕нр╕Щр╕Юр╕╣р╕Ф
        """
        if not text or text.strip() == "":
            return
        
        # тЬЕ р╕Чр╕│р╕Др╕зр╕▓р╕бр╕кр╕░р╕нр╕▓р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Бр╣Ир╕нр╕Щр╕Юр╕╣р╕Ф
        cleaned_text = self._clean_text(text)
        
        if not cleaned_text.strip():
            return

        try:
            if self.fallback_enabled:
                # --- р╣Гр╕Кр╣Й Google TTS ---
                self._speak_google(cleaned_text)
            else:
                # --- р╣Гр╕Кр╣Йр╣Ар╕кр╕╡р╕вр╕Зр╕Вр╕нр╕Зр╕гр╕░р╕Ър╕Ъ Windows ---
                self.engine.say(cleaned_text)
                self.engine.runAndWait()

        except Exception as e:
            print(f"[TTS ERROR] р╕гр╕░р╕Ър╕Ър╣Ар╕кр╕╡р╕вр╕Зр╕лр╕ер╕▒р╕Бр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з: {e}")
            print("ЁЯСЙ р╕Бр╕│р╕ер╕▒р╕Зр╕кр╕ер╕▒р╕Ър╣Др╕Ыр╣Гр╕Кр╣Й Google TTS (р╕кр╕│р╕гр╕нр╕З)")
            self._speak_google(cleaned_text)
    
    def _clean_text(self, text: str) -> str:
        """
        тЬЕ р╕Чр╕│р╕Др╕зр╕▓р╕бр╕кр╕░р╕нр╕▓р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
        - р╕Хр╕▒р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕Щр╕зр╕Зр╣Ар╕ер╣Зр╕Ъ () р╕нр╕нр╕Б
        - р╕Хр╕▒р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕Щр╕зр╕Зр╣Ар╕ер╣Зр╕Ър╣Ар╕лр╕ер╕╡р╣Ир╕вр╕б [] р╕нр╕нр╕Б
        - р╕Хр╕▒р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕Щр╕Ыр╕╡р╕Бр╕Бр╕▓ {} р╕нр╕нр╕Б
        - р╕Хр╕▒р╕Ф emoji р╣Бр╕ер╕░р╕кр╕▒р╕Нр╕ер╕▒р╕Бр╕йр╕Ур╣Мр╕Юр╕┤р╣Ар╕ир╕йр╕нр╕нр╕Б
        - р╕Хр╕▒р╕Фр╕Кр╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕Зр╣Ар╕Бр╕┤р╕Щр╕нр╕нр╕Б
        """
        # р╕Хр╕▒р╕Фр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Гр╕Щр╕зр╕Зр╣Ар╕ер╣Зр╕Ър╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
        text = re.sub(r'\([^)]*\)', '', text)  # р╕Хр╕▒р╕Ф (...)
        text = re.sub(r'\[[^\]]*\]', '', text)  # р╕Хр╕▒р╕Ф [...]
        text = re.sub(r'\{[^}]*\}', '', text)  # р╕Хр╕▒р╕Ф {...}
        
        # р╕Хр╕▒р╕Ф emoji р╣Бр╕ер╕░р╕кр╕▒р╕Нр╕ер╕▒р╕Бр╕йр╕Ур╣Мр╕Юр╕┤р╣Ар╕ир╕йр╕Чр╕▒р╣Ир╕зр╣Др╕Ы
        text = re.sub(r'[ЁЯШКЁЯдЦЁЯУЭтЬЕтЭМЁЯФНЁЯЪАЁЯТбЁЯОдтП╣я╕ПЁЯФ┤тП│ЁЯОпЁЯОиЁЯОнЁЯОкЁЯОмЁЯОоЁЯО▓ЁЯО░ЁЯО│]', '', text)
        text = re.sub(r'[ЁЯСНЁЯСОЁЯСПЁЯСЛЁЯЩПЁЯТкЁЯдЭЁЯдЮЁЯдЯЁЯдШ]', '', text)
        text = re.sub(r'[тЭдя╕ПЁЯТФЁЯТХЁЯТЦЁЯТЧЁЯТЩЁЯТЪЁЯТЫЁЯТЬЁЯЦд]', '', text)
        text = re.sub(r'[тнРЁЯМЯтЬиЁЯТлтЪбЁЯФеЁЯТеЁЯТвЁЯТп]', '', text)
        
        # р╕Хр╕▒р╕Фр╕кр╕▒р╕Нр╕ер╕▒р╕Бр╕йр╕Ур╣Мр╕нр╕╖р╣Ир╕Щр╣Ж р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г
        text = re.sub(r'[тЦ║тЦ╝тЦ▓тЧПтЧЛтЦатЦбтЧЖтЧЗтШЕтШЖтЩктЩл]', '', text)
        
        # р╕Хр╕▒р╕Фр╕Кр╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕Зр╣Ар╕Бр╕┤р╕Щ
        text = re.sub(r'\s+', ' ', text)
        text = text.strip()
        
        return text

    def _speak_google(self, text):
        """р╕гр╕░р╕Ър╕Ър╣Ар╕кр╕╡р╕вр╕Зр╕кр╕│р╕гр╕нр╕Зр╕Ир╕▓р╕Б Google"""
        try:
            with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as tmp_file:
                tts = gTTS(text=text, lang="th")
                tts.save(tmp_file.name)
                tmp_path = tmp_file.name

            playsound(tmp_path)
            os.remove(tmp_path)
        except Exception as e:
            print(f"[TTS ERROR] Google TTS р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Др╕бр╣Ир╣Др╕Фр╣Й: {e}")
            print("тЪая╕П р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕кр╕╡р╕вр╕Зр╕Юр╕╣р╕Фр╣Др╕Фр╣Йр╣Гр╕Щр╕Вр╕Ур╕░р╕Щр╕╡р╣Й")


# тЬЕ Test Mode
if __name__ == "__main__":
    tts = TTSClient(lang="th")
    
    print("\n=== р╕Чр╕Фр╕кр╕нр╕Ъ TTS ===\n")
    
    # р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕Бр╕Хр╕┤
    print("1. р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕Бр╕Хр╕┤")
    tts.speak("р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╕гр╕▒р╕Ъ р╕Ьр╕бр╣Ар╕Ыр╣Зр╕Щр╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕вр╕нр╕▒р╕Ир╕Йр╕гр╕┤р╕вр╕░")
    print("   тЬЕ р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ\n")
    
    # р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕╡р╣Ир╕бр╕╡р╕зр╕Зр╣Ар╕ер╣Зр╕Ъ (р╕Др╕зр╕гр╕Ир╕░р╣Др╕бр╣Ир╕Юр╕╣р╕Фр╕кр╣Ир╕зр╕Щр╣Гр╕Щр╕зр╕Зр╣Ар╕ер╣Зр╕Ъ)
    print("2. р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕╡р╣Ир╕бр╕╡р╕зр╕Зр╣Ар╕ер╣Зр╕Ъ")
    print("   Input: 'р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╕гр╕▒р╕Ъ (Hello in English)'")
    tts.speak("р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╕гр╕▒р╕Ъ (Hello in English)")
    print("   тЬЕ р╕Др╕зр╕гр╕Юр╕╣р╕Фр╣Бр╕Др╣И 'р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╕гр╕▒р╕Ъ'\n")
    
    # р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕╡р╣Ир╕бр╕╡ emoji
    print("3. р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕╡р╣Ир╕бр╕╡ emoji")
    print("   Input: 'р╣Ар╕Ыр╕┤р╕Фр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╕кр╕│р╣Ар╕гр╣Зр╕И тЬЕ (Program opened successfully)'")
    tts.speak("р╣Ар╕Ыр╕┤р╕Фр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╕кр╕│р╣Ар╕гр╣Зр╕И тЬЕ (Program opened successfully)")
    print("   тЬЕ р╕Др╕зр╕гр╕Юр╕╣р╕Фр╣Бр╕Др╣И 'р╣Ар╕Ыр╕┤р╕Фр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╕кр╕│р╣Ар╕гр╣Зр╕И'\n")
    
    # р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕╡р╣Ир╕бр╕╡р╕Чр╕▒р╣Йр╕З emoji р╣Бр╕ер╕░р╕зр╕Зр╣Ар╕ер╣Зр╕Ъ
    print("4. р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕Ър╕Ър╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в AI")
    print("   Input: 'ЁЯдЦ р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в: р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╣Ир╕░! р╕Йр╕▒р╕Щр╕Др╕╖р╕нр╣Бр╕Ър╕Ър╕Ир╕│р╕ер╕нр╕З (I am a model)'")
    tts.speak("ЁЯдЦ р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в: р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╣Ир╕░! р╕Йр╕▒р╕Щр╕Др╕╖р╕нр╣Бр╕Ър╕Ър╕Ир╕│р╕ер╕нр╕З (I am a model)")
    print("   тЬЕ р╕Др╕зр╕гр╕Юр╕╣р╕Фр╣Бр╕Др╣И 'р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в: р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╣Ир╕░! р╕Йр╕▒р╕Щр╕Др╕╖р╕нр╣Бр╕Ър╕Ър╕Ир╕│р╕ер╕нр╕З'\n")
    
    print("тЬЕ р╕Чр╕Фр╕кр╕нр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ")