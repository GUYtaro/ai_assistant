# core/screen_reader.py
# -------------------------
# ‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô "Screen Reader" ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
# ‡πÉ‡∏ä‡πâ pytesseract + Pillow (PIL) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (screenshot)
# ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (OCR = Optical Character Recognition)
# -------------------------

import pytesseract
import pyautogui
from PIL import Image

class ScreenReader:
    """
    ‡∏Ñ‡∏•‡∏≤‡∏™ ScreenReader
    -----------------
    ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ:
    - ‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (Screenshot)
    - ‡πÉ‡∏ä‡πâ OCR (pytesseract) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û
    - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô (Crop)
    """

    def __init__(self, lang="tha+eng"):
        """
        lang: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ OCR ‡πÄ‡∏ä‡πà‡∏ô
            - "tha"   = ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
            - "eng"   = ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
            - "tha+eng" = ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
        """
        self.lang = lang
        print(f"[ScreenReader] ‚úÖ Initialised OCR language = {self.lang}")

    def read_screen(self):
        """
        ‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ ‚Üí ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢ OCR
        return: string (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ)
        """
        print("[ScreenReader] üñº ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏≠...")
        screenshot = pyautogui.screenshot()   # ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏≠
        text = pytesseract.image_to_string(screenshot, lang=self.lang)  # OCR
        print("[ScreenReader] üìñ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ:", text.strip()[:50], "...")
        return text.strip()

    def read_region(self, x, y, width, height):
        """
        ‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (x, y, w, h) ‚Üí OCR
        ‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°, ‡∏õ‡∏∏‡πà‡∏°, ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
        return: string (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ)
        """
        print(f"[ScreenReader] üñº ‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô: x={x}, y={y}, w={width}, h={height}")
        screenshot = pyautogui.screenshot(region=(x, y, width, height))  # Crop
        text = pytesseract.image_to_string(screenshot, lang=self.lang)
        print("[ScreenReader] üìñ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ:", text.strip()[:50], "...")
        return text.strip()

    def save_screenshot(self, filepath="screenshot.png"):
        """
        ‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå .png
        ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£ debug ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡πá‡∏ö log
        """
        screenshot = pyautogui.screenshot()
        screenshot.save(filepath)
        print(f"[ScreenReader] üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡πà {filepath}")
