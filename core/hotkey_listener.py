# core/hotkey_listener.py
# -------------------------
# ‡∏£‡∏∞‡∏ö‡∏ö‡∏ü‡∏±‡∏á Hotkey (‡πÄ‡∏ä‡πà‡∏ô F4) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á
# ‡πÇ‡∏´‡∏°‡∏î: Press-to-Talk (‡∏Å‡∏î‡∏ó‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß = ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏¥‡∏î)
# -------------------------

from pynput import keyboard
import threading
import time


class HotkeyListener:
    """
    ‡∏ü‡∏±‡∏á Hotkey ‡πÅ‡∏ö‡∏ö Global (‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏°‡πâ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ Focus)
    ‡πÇ‡∏´‡∏°‡∏î Press-to-Talk: ‡∏Å‡∏î F4 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‚Üí ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏¥‡∏î)
    """

    def __init__(self, callback_start, callback_stop=None, hotkey="f4", cooldown=2.0):
        """
        Parameters
        ----------
        callback_start : function
            ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î hotkey
        callback_stop : function, optional
            (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏ô‡∏µ‡πâ ‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠ compatibility)
        hotkey : str
            ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ü‡∏±‡∏á ‡πÄ‡∏ä‡πà‡∏ô "f4", "f5"
        cooldown : float
            ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ cooldown (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
        """
        self.callback_start = callback_start
        self.callback_stop = callback_stop
        self.hotkey = hotkey.lower()
        self.cooldown = cooldown
        self.last_trigger_time = 0
        self.listener = None

    def _on_press(self, key):
        """
        ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô hotkey ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        """
        try:
            # ‡πÅ‡∏õ‡∏•‡∏á key ‡πÄ‡∏õ‡πá‡∏ô string
            key_name = None
            if hasattr(key, 'name'):
                key_name = key.name.lower()
            elif hasattr(key, 'char') and key.char:
                key_name = key.char.lower()

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö hotkey ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if key_name and key_name == self.hotkey:
                self._trigger_voice_mode()

        except AttributeError:
            pass

    def _trigger_voice_mode(self):
        """
        ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å callback_start (‡∏û‡∏£‡πâ‡∏≠‡∏° cooldown ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏î‡∏ã‡πâ‡∏≥)
        """
        current_time = time.time()
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cooldown
        if current_time - self.last_trigger_time < self.cooldown:
            print(f"[Hotkey] ‚è≥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠ {self.cooldown:.1f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏î‡πÉ‡∏´‡∏°‡πà")
            return
        
        self.last_trigger_time = current_time
        
        if self.callback_start:
            # ‡∏£‡∏±‡∏ô callback ‡πÉ‡∏ô thread ‡πÅ‡∏¢‡∏Å ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Å listener
            threading.Thread(target=self.callback_start, daemon=True).start()

    def start(self):
        """
        ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á hotkey (‡∏£‡∏±‡∏ô‡πÉ‡∏ô background thread)
        """
        print(f"[Hotkey] üéπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏õ‡∏∏‡πà‡∏° '{self.hotkey.upper()}' (Press-to-Talk Mode)")
        print(f"[Hotkey] üí° ‡∏Å‡∏î {self.hotkey.upper()} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏π‡∏î‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
        self.listener = keyboard.Listener(on_press=self._on_press)
        self.listener.start()

    def stop(self):
        """
        ‡∏´‡∏¢‡∏∏‡∏î‡∏ü‡∏±‡∏á hotkey
        """
        if self.listener:
            self.listener.stop()
            print("[Hotkey] üõë ‡∏´‡∏¢‡∏∏‡∏î‡∏ü‡∏±‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß")


# ‚úÖ Test Mode
if __name__ == "__main__":
    import time

    def test_start():
        print("‚úÖ [TEST] ‡∏Å‡∏î F4 ‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á")
        time.sleep(2)  # ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        print("‚úÖ [TEST] ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î F4 ‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ")

    listener = HotkeyListener(
        callback_start=test_start,
        hotkey="f4",
        cooldown=1.0  # cooldown 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    )
    listener.start()

    print("‡∏Å‡∏î F4 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡∏Å‡∏î Ctrl+C ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å)")
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        listener.stop()
        print("\n[Test] ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö")